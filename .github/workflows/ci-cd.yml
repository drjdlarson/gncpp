name: CI/CD
on:
  push:

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_BASE_NAME: ${{ github.repository }}

jobs:
  unit-test-container:
    name: Unit test in container (Release mode)
    runs-on: ubuntu-latest
    container:
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
      image: ghcr.io/${{ github.repository }}-dev:latest
      options: --cpus 2

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Build in Release
        run: |
          conan install . --build=missing -o with_docs=False -o with_tests=True -s build_type=Release
          cmake . --preset conan-release
          cmake --build . --preset conan-release -j4

      - name: Unit test in Release
        run: |
          cd build/Release
          ctest --output-on-failure -j4

  unit-test-dbg:
    name: Run unit tests on ${{ matrix.os }} (Debug mode)
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # os: [ubuntu-latest, windows-latest, macos-latest]
        # os: [ubuntu-latest, macos-latest]
        os: [ubuntu-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Build in Debug
        run: |
          python3 -m pip install wheel conan
          conan profile detect
          sed -i 's/gnu14/gnu20/' ~/.conan2/profiles/default
          conan install . --build=missing -o with_docs=False -o with_tests=True -s build_type=Debug
          cmake . --preset conan-debug
          cmake --build . --preset conan-debug -j4

      - name: Unit test in Debug
        run: |
          cd build/Debug
          ctest --output-on-failure -j4

  unit-test-rel:
    name: Run unit tests on ${{ matrix.os }} (Release mode)
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # os: [ubuntu-latest, windows-latest, macos-latest]
        # os: [ubuntu-latest, macos-latest]
        os: [ubuntu-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Build in Release
        run: |
          python3 -m pip install wheel conan
          conan profile detect
          sed -i 's/gnu14/gnu20/' ~/.conan2/profiles/default
          conan install . --build=missing -o with_docs=False -o with_tests=True -s build_type=Release
          cmake . --preset conan-release
          cmake --build . --preset conan-release -j4

      - name: Unit test in Release
        run: |
          cd build/Release
          ctest --output-on-failure -j4